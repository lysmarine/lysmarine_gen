---
version: 2.1

orbs:
  cloudsmith: cloudsmith/cloudsmith@1.0.4

executors:
  linux:
    machine:
      image: ubuntu-2004:202010-01
      
commands:
  prepare-linux-machine:
    description: "Install the requirements to run lysmarine build script"
    steps:
      - checkout
      - run: sudo apt-get -q update
      - run: sudo apt-get -y -q install proot qemu qemu-user git p7zip-full parted kpartx
      - run: cd cross-build-release; sudo chmod -v u+w *.sh;

  publish:
    steps:
      - cloudsmith/ensure-api-key
      - cloudsmith/install-cli
      - run: ls -lah ./cross-build-release/release/
      - run: zip $(ls ./cross-build-release/release/).zip ./cross-build-release/release/$(ls ./cross-build-release/release/)
      - cloudsmith/publish:
          cloudsmith-repository: lysmarineos/images
          package-format: raw
          package-path: ./*.zip

jobs:

  build-raspios-arm32:
    parameters:
      saywhat:
        description: "To whom shall we say hello?"
        default: "World"
        type: string

    executor: linux
    steps:
      - prepare-linux-machine
#      - attach_workspace:
#          at: /home/circleci
      - run:
#          command: cd cross-build-release;sudo /bin/bash -xe ./build.sh raspios armhf 0.9.12

          command: echo << parameters.saywhat >>
          no_output_timeout: 30m
#      - persist_to_workspace:
#          root: .
#          paths: ./cross-build-release/release/
#      - store_artifacts:
#          path: ./cross-build-release/release/
#          destination: release/
#      - publish

  build-raspios-arm64:
    executor: linux
    steps:
      - prepare-linux-machine
      - attach_workspace:
          at: /home/circleci
      - run:
          command: cd cross-build-release;sudo /bin/bash -xe ./build.sh raspios arm64 0.9.12
          no_output_timeout: 30m
      - persist_to_workspace:
           root: .
           paths: ./cross-build-release//release
      - store_artifacts:
          path: ./cross-build-release/release/
          destination: release/
      - publish

  build-armbian-pine64so:
    executor: linux
    steps:
      - prepare-linux-machine
      - run:
          command: cd cross-build-release;sudo /bin/bash -xe ./build.sh armbian-pineA64so arm64 0.9.12
          no_output_timeout: 30m
      - store_artifacts:
          path: ./cross-build-release/release/
          destination: release/
      - publish

  build-debian-live:
    executor: linux
    environment:
      - PKG_DISTRO=buster
      - LYSMARINE_VER=0.9.0.11
      - PKG_ARCH=amd64
    steps:
      - prepare-linux-machine
      - run:
          command: cd cross-build-release; sudo /bin/bash -xe ./build.sh debian-live amd64 0.9.12
          no_output_timeout: 30m
      - store_artifacts:
          path: ./cross-build-release/release/
          destination: release/
      - publish



workflows:
  version: 2
  build_all:
    jobs:

      - build-raspios-arm32:
          saywhat: Everyone
#      - build-raspios-arm64
#      - build-armbian-pine64so
#      #- build-debian-vbox
#      - build-debian-live
